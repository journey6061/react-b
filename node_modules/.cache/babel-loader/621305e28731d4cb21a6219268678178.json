{"ast":null,"code":"var _jsxFileName = \"/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js\";\nimport React, { useState } from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\nconst Burger = props => {\n  //const [check, setCheck]=useState(false);\n  // const [count, setCount] = useState(0);\n  //const [check, setCheck] = useState(true);\n  let emptyinfo = null;\n  let checkbtn = null;\n  const countingradience = Object.keys(props.ingra).map(aa => [...Array(props.ingra[aa])].map((bb, index) => {\n    return React.createElement(Burgeringra, {\n      key: aa + index + bb,\n      type: aa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }))\n  /*把Array的三个数组合并*/\n  .reduce((aa, sec) => {\n    return aa.concat(sec);\n  }); //console.log(countingradience);\n\n  if (countingradience.length === 0) {\n    emptyinfo = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"please input ingradient\"); //setCheck(true);\n\n    checkbtn = true;\n  } else {\n    //props.parent.getChildrenMsg(this, true);\n    //setCheck(check=false);\n    //this.setState({check:false})\n    //check=true;\n    //() => {return setCheck(check=false)};\n    //setCheck({ check }=false);\n    checkbtn = false;\n  }\n  /* {\n      for(let i=0; i<props.ingra[aa];i++){\n          customfood+=<Burgeringra key={aa+i} type={aa}/>;\n      }\n      \n  } */\n\n  /*数组方法\n  let customfood=[];\n  const countingradience=Object.keys(props.ingra);\n   for (let j=0; j<countingradience.length; j++){\n      for(let i=0; i<props.ingra[countingradience[j]];i++){\n          customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n       }\n  }\n  console.log(customfood);\n  */\n\n  /* const toParent = (props) => {\n  // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n      props.parent.getChildrenMsg(this, this.state.msg)\n  }  */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Burgeringra, {\n    type: \"test1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), countingradience, emptyinfo, React.createElement(Burgeringra, {\n    type: \"test2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: checkbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"testtttttt!\"));\n  /* (ingra,index)=>{\n  ingra.map(\n   )\n  } */\n};\n\nexport default Burger;","map":{"version":3,"sources":["/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js"],"names":["React","useState","Burgeringra","Burger","props","emptyinfo","checkbtn","countingradience","Object","keys","ingra","map","aa","Array","bb","index","reduce","sec","concat","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,MAAM,GAAEC,KAAD,IAAS;AAClB;AACA;AACA;AACA,MAAIC,SAAS,GAAC,IAAd;AACA,MAAIC,QAAQ,GAAC,IAAb;AAEA,QAAMC,gBAAgB,GAACC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACM,KAAlB,EACtBC,GADsB,CAClBC,EAAE,IAEF,CAAC,GAAGC,KAAK,CAACT,KAAK,CAACM,KAAN,CAAYE,EAAZ,CAAD,CAAT,EACJD,GADI,CACA,CAACG,EAAD,EAAKC,KAAL,KAAa;AACV,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEH,EAAE,GAACG,KAAH,GAASD,EAA3B;AAA+B,MAAA,IAAI,EAAEF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHA,CAHkB;AASvB;AATuB,GAUtBI,MAVsB,CAUf,CAACJ,EAAD,EAAIK,GAAJ,KAAU;AACd,WAAOL,EAAE,CAACM,MAAH,CAAUD,GAAV,CAAP;AACH,GAZsB,CAAvB,CAPkB,CAoBlB;;AACA,MAAGV,gBAAgB,CAACY,MAAjB,KAA0B,CAA7B,EAA+B;AAC3Bd,IAAAA,SAAS,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAV,CAD2B,CAE3B;;AACAC,IAAAA,QAAQ,GAAC,IAAT;AAEH,GALD,MAMI;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,IAAAA,QAAQ,GAAC,KAAT;AACH;AACD;;;;;;;AAOA;;;;;;;;;;;AAaA;;;;;;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQCC,gBARD,EASCF,SATD,EAWA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,EAaA;AAAQ,IAAA,QAAQ,EAAEC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbA,CADJ;AAsBA;;;;AAMH,CA1FD;;AA4FA,eAAeH,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\nconst Burger=(props)=>{\n    //const [check, setCheck]=useState(false);\n    // const [count, setCount] = useState(0);\n    //const [check, setCheck] = useState(true);\n    let emptyinfo=null;\n    let checkbtn=null;\n\n    const countingradience=Object.keys(props.ingra)\n    .map(aa=>\n        \n         [...Array(props.ingra[aa])]\n    .map((bb, index)=>{\n            return <Burgeringra key={aa+index+bb} type={aa}/>;\n        }\n    ) \n    )\n    /*把Array的三个数组合并*/\n    .reduce((aa,sec)=>{\n        return aa.concat(sec)\n    })\n    //console.log(countingradience);\n    if(countingradience.length===0){\n        emptyinfo=<p>please input ingradient</p>\n        //setCheck(true);\n        checkbtn=true;\n\n    }\n    else{\n        //props.parent.getChildrenMsg(this, true);\n        //setCheck(check=false);\n        //this.setState({check:false})\n        //check=true;\n        //() => {return setCheck(check=false)};\n        //setCheck({ check }=false);\n        checkbtn=false;\n    }\n    /* {\n        for(let i=0; i<props.ingra[aa];i++){\n            customfood+=<Burgeringra key={aa+i} type={aa}/>;\n        }\n        \n    } */\n\n    /*数组方法\n    let customfood=[];\n    const countingradience=Object.keys(props.ingra);\n\n    for (let j=0; j<countingradience.length; j++){\n        for(let i=0; i<props.ingra[countingradience[j]];i++){\n            customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n\n        }\n    }\n    console.log(customfood);\n    */\n    \n    /* const toParent = (props) => {\n    // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n        props.parent.getChildrenMsg(this, this.state.msg)\n    }  */\n    \n        \n    return (\n        <div>\n        <Burgeringra type='test1'/>\n        {/* <Burgeringra type={props.ingradience.custom1}/> \n        <Burgeringra type={props.ingradience.custom2}/> \n        <Burgeringra type={props.ingradience.custom3}/>  */}\n        {/* 数组方法component\n        {customfood} */}\n\n        {countingradience}\n        {emptyinfo}\n        \n        <Burgeringra type='test2'/>\n\n        <button disabled={checkbtn}>testtttttt!</button>\n        {/* <button disabled={check}>Check Out</button> */}\n        {/* <p>You clicked {count} times</p>\n        <button onClick={() => setCount(count+1)}>\n    Click me\n  </button> */}\n        </div>\n    )\n    /* (ingra,index)=>{\n    ingra.map(\n\n    )\n} */\n    \n};\n\nexport default Burger;"]},"metadata":{},"sourceType":"module"}