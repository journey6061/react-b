{"ast":null,"code":"import _toConsumableArray from\"/Users/alexzhang/Documents/react/react-b/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{Component}from'react';import Burgeringra from'./burgeringra/burgeringra';/* class burger extends Component{\n    render(){\n        return(\n            <div>\n            <Burgeringra type=\"test1\"/>\n            <Burgeringra type=\"custom1\"/> \n            <Burgeringra type=\"custom2\"/> \n            <Burgeringra type=\"custom3\"/> \n            <Burgeringra type=\"test2\"/>\n                  \n            </div>\n        );\n    }\n\n} */var burger=function burger(props){var emptyinfo=null;var countingradience=Object.keys(props.ingra).map(function(aa){return _toConsumableArray(Array(props.ingra[aa])).map(function(bb,index){return React.createElement(Burgeringra,{key:aa+index+bb,type:aa});});})/*把Array的三个数组合并*/.reduce(function(aa,sec){return aa.concat(sec);});console.log(countingradience);if(countingradience.length===0){emptyinfo=React.createElement(\"p\",null,\"please input ingradient\");}/* {\n        for(let i=0; i<props.ingra[aa];i++){\n            customfood+=<Burgeringra key={aa+i} type={aa}/>;\n        }\n        \n    } */ /*数组方法\n    let customfood=[];\n    const countingradience=Object.keys(props.ingra);\n\n    for (let j=0; j<countingradience.length; j++){\n        for(let i=0; i<props.ingra[countingradience[j]];i++){\n            customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n\n        }\n    }\n    console.log(customfood);\n    */return React.createElement(\"div\",null,React.createElement(Burgeringra,{type:\"test1\"}),countingradience,emptyinfo,React.createElement(Burgeringra,{type:\"test2\"}));/* (ingra,index)=>{\n    ingra.map(\n\n    )\n} */};export default burger;","map":{"version":3,"sources":["/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js"],"names":["React","Component","Burgeringra","burger","props","emptyinfo","countingradience","Object","keys","ingra","map","aa","Array","bb","index","reduce","sec","concat","console","log","length"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA;;;;;;;;;;;;;;IAgBA,GAAMC,CAAAA,MAAM,CAAC,QAAPA,CAAAA,MAAO,CAACC,KAAD,CAAS,CAClB,GAAIC,CAAAA,SAAS,CAAC,IAAd,CACA,GAAMC,CAAAA,gBAAgB,CAACC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,KAAlB,EACtBC,GADsB,CAClB,SAAAC,EAAE,QAEF,oBAAIC,KAAK,CAACR,KAAK,CAACK,KAAN,CAAYE,EAAZ,CAAD,CAAT,EACJD,GADI,CACA,SAACG,EAAD,CAAKC,KAAL,CAAa,CACV,MAAO,qBAAC,WAAD,EAAa,GAAG,CAAEH,EAAE,CAACG,KAAH,CAASD,EAA3B,CAA+B,IAAI,CAAEF,EAArC,EAAP,CACH,CAHA,CAFE,EADgB,CASvB,iBATuB,CAUtBI,MAVsB,CAUf,SAACJ,EAAD,CAAIK,GAAJ,CAAU,CACd,MAAOL,CAAAA,EAAE,CAACM,MAAH,CAAUD,GAAV,CAAP,CACH,CAZsB,CAAvB,CAaAE,OAAO,CAACC,GAAR,CAAYb,gBAAZ,EACA,GAAGA,gBAAgB,CAACc,MAAjB,GAA0B,CAA7B,CAA+B,CAC3Bf,SAAS,CAAC,uDAAV,CACH,CACD;;;;;QAnBkB,CA0BlB;;;;;;;;;;;MAgBA,MACI,gCACA,oBAAC,WAAD,EAAa,IAAI,CAAC,OAAlB,EADA,CAQCC,gBARD,CASCD,SATD,CAWA,oBAAC,WAAD,EAAa,IAAI,CAAC,OAAlB,EAXA,CADJ,CAeA;;;;IAMH,CA/DD,CAiEA,cAAeF,CAAAA,MAAf","sourcesContent":["import React,{Component} from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\n/* class burger extends Component{\n    render(){\n        return(\n            <div>\n            <Burgeringra type=\"test1\"/>\n            <Burgeringra type=\"custom1\"/> \n            <Burgeringra type=\"custom2\"/> \n            <Burgeringra type=\"custom3\"/> \n            <Burgeringra type=\"test2\"/>\n                  \n            </div>\n        );\n    }\n\n} */\n\nconst burger=(props)=>{\n    let emptyinfo=null;\n    const countingradience=Object.keys(props.ingra)\n    .map(aa=>\n        \n         [...Array(props.ingra[aa])]\n    .map((bb, index)=>{\n            return <Burgeringra key={aa+index+bb} type={aa}/>;\n        }\n    ) \n    )\n    /*把Array的三个数组合并*/\n    .reduce((aa,sec)=>{\n        return aa.concat(sec)\n    })\n    console.log(countingradience);\n    if(countingradience.length===0){\n        emptyinfo=<p>please input ingradient</p>\n    }\n    /* {\n        for(let i=0; i<props.ingra[aa];i++){\n            customfood+=<Burgeringra key={aa+i} type={aa}/>;\n        }\n        \n    } */\n\n    /*数组方法\n    let customfood=[];\n    const countingradience=Object.keys(props.ingra);\n\n    for (let j=0; j<countingradience.length; j++){\n        for(let i=0; i<props.ingra[countingradience[j]];i++){\n            customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n\n        }\n    }\n    console.log(customfood);\n    */\n    \n\n    \n        \n    return (\n        <div>\n        <Burgeringra type='test1'/>\n        {/* <Burgeringra type={props.ingradience.custom1}/> \n        <Burgeringra type={props.ingradience.custom2}/> \n        <Burgeringra type={props.ingradience.custom3}/>  */}\n        {/* 数组方法component\n        {customfood} */}\n\n        {countingradience}\n        {emptyinfo}\n        \n        <Burgeringra type='test2'/>\n        </div>\n    )\n    /* (ingra,index)=>{\n    ingra.map(\n\n    )\n} */\n    \n};\n\nexport default burger;"]},"metadata":{},"sourceType":"module"}