{"ast":null,"code":"var _jsxFileName = \"/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js\";\nimport React, { Component } from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n/* class burger extends Component{\n    render(){\n        return(\n            <div>\n            <Burgeringra type=\"test1\"/>\n            <Burgeringra type=\"custom1\"/> \n            <Burgeringra type=\"custom2\"/> \n            <Burgeringra type=\"custom3\"/> \n            <Burgeringra type=\"test2\"/>\n                  \n            </div>\n        );\n    }\n\n} */\n\nconst burger = props => {\n  let emptyinfo = null;\n  const countingradience = Object.keys(props.ingra).map(aa => [...Array(props.ingra[aa])].map((bb, index) => {\n    return React.createElement(Burgeringra, {\n      key: aa + index + bb,\n      type: aa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }))\n  /*把Array的三个数组合并*/\n  .reduce((aa, sec) => {\n    return aa.concat(sec);\n  });\n  console.log(countingradience);\n\n  if (countingradience.length === 0) {\n    emptyinfo = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"please input ingradient\");\n  } else {\n    this.props.parent.getChildrenMsg(this, true);\n  }\n  /* {\n      for(let i=0; i<props.ingra[aa];i++){\n          customfood+=<Burgeringra key={aa+i} type={aa}/>;\n      }\n      \n  } */\n\n  /*数组方法\n  let customfood=[];\n  const countingradience=Object.keys(props.ingra);\n   for (let j=0; j<countingradience.length; j++){\n      for(let i=0; i<props.ingra[countingradience[j]];i++){\n          customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n       }\n  }\n  console.log(customfood);\n  */\n\n  /* toParent = () => {\n   // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n       this.props.parent.getChildrenMsg(this, this.state.msg)\n   } */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Burgeringra, {\n    type: \"test1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), countingradience, emptyinfo, React.createElement(Burgeringra, {\n    type: \"test2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n  /* (ingra,index)=>{\n  ingra.map(\n   )\n  } */\n};\n\nexport default burger;","map":{"version":3,"sources":["/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js"],"names":["React","Component","Burgeringra","burger","props","emptyinfo","countingradience","Object","keys","ingra","map","aa","Array","bb","index","reduce","sec","concat","console","log","length","parent","getChildrenMsg"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAMC,MAAM,GAAEC,KAAD,IAAS;AAClB,MAAIC,SAAS,GAAC,IAAd;AACA,QAAMC,gBAAgB,GAACC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,KAAlB,EACtBC,GADsB,CAClBC,EAAE,IAEF,CAAC,GAAGC,KAAK,CAACR,KAAK,CAACK,KAAN,CAAYE,EAAZ,CAAD,CAAT,EACJD,GADI,CACA,CAACG,EAAD,EAAKC,KAAL,KAAa;AACV,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEH,EAAE,GAACG,KAAH,GAASD,EAA3B;AAA+B,MAAA,IAAI,EAAEF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHA,CAHkB;AASvB;AATuB,GAUtBI,MAVsB,CAUf,CAACJ,EAAD,EAAIK,GAAJ,KAAU;AACd,WAAOL,EAAE,CAACM,MAAH,CAAUD,GAAV,CAAP;AACH,GAZsB,CAAvB;AAaAE,EAAAA,OAAO,CAACC,GAAR,CAAYb,gBAAZ;;AACA,MAAGA,gBAAgB,CAACc,MAAjB,KAA0B,CAA7B,EAA+B;AAC3Bf,IAAAA,SAAS,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAV;AACH,GAFD,MAGI;AACA,SAAKD,KAAL,CAAWiB,MAAX,CAAkBC,cAAlB,CAAiC,IAAjC,EAAuC,IAAvC;AACH;AACD;;;;;;;AAOA;;;;;;;;;;;AAaD;;;;;;AAMC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQChB,gBARD,EASCD,SATD,EAWA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADJ;AAeA;;;;AAMH,CArED;;AAuEA,eAAeF,MAAf","sourcesContent":["import React,{Component} from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\n/* class burger extends Component{\n    render(){\n        return(\n            <div>\n            <Burgeringra type=\"test1\"/>\n            <Burgeringra type=\"custom1\"/> \n            <Burgeringra type=\"custom2\"/> \n            <Burgeringra type=\"custom3\"/> \n            <Burgeringra type=\"test2\"/>\n                  \n            </div>\n        );\n    }\n\n} */\n\nconst burger=(props)=>{\n    let emptyinfo=null;\n    const countingradience=Object.keys(props.ingra)\n    .map(aa=>\n        \n         [...Array(props.ingra[aa])]\n    .map((bb, index)=>{\n            return <Burgeringra key={aa+index+bb} type={aa}/>;\n        }\n    ) \n    )\n    /*把Array的三个数组合并*/\n    .reduce((aa,sec)=>{\n        return aa.concat(sec)\n    })\n    console.log(countingradience);\n    if(countingradience.length===0){\n        emptyinfo=<p>please input ingradient</p>\n    }\n    else{\n        this.props.parent.getChildrenMsg(this, true);\n    }\n    /* {\n        for(let i=0; i<props.ingra[aa];i++){\n            customfood+=<Burgeringra key={aa+i} type={aa}/>;\n        }\n        \n    } */\n\n    /*数组方法\n    let customfood=[];\n    const countingradience=Object.keys(props.ingra);\n\n    for (let j=0; j<countingradience.length; j++){\n        for(let i=0; i<props.ingra[countingradience[j]];i++){\n            customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n\n        }\n    }\n    console.log(customfood);\n    */\n    \n   /* toParent = () => {\n    // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n        this.props.parent.getChildrenMsg(this, this.state.msg)\n    } */\n    \n        \n    return (\n        <div>\n        <Burgeringra type='test1'/>\n        {/* <Burgeringra type={props.ingradience.custom1}/> \n        <Burgeringra type={props.ingradience.custom2}/> \n        <Burgeringra type={props.ingradience.custom3}/>  */}\n        {/* 数组方法component\n        {customfood} */}\n\n        {countingradience}\n        {emptyinfo}\n        \n        <Burgeringra type='test2'/>\n        </div>\n    )\n    /* (ingra,index)=>{\n    ingra.map(\n\n    )\n} */\n    \n};\n\nexport default burger;"]},"metadata":{},"sourceType":"module"}