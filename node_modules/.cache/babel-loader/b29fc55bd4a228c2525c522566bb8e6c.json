{"ast":null,"code":"import _slicedToArray from \"/Users/alexzhang/Documents/react/react-b/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js\";\nimport React, { useState } from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\nconst burger = props => {\n  //const [check, setCheck]=useState(false);\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  let emptyinfo = null;\n  const countingradience = Object.keys(props.ingra).map(aa => [...Array(props.ingra[aa])].map((bb, index) => {\n    return React.createElement(Burgeringra, {\n      key: aa + index + bb,\n      type: aa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }))\n  /*把Array的三个数组合并*/\n  .reduce((aa, sec) => {\n    return aa.concat(sec);\n  });\n  console.log(countingradience);\n\n  if (countingradience.length === 0) {\n    emptyinfo = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"please input ingradient\");\n  } else {} //props.parent.getChildrenMsg(this, true);\n  //()=>setCheck(check=true);\n\n  /* {\n      for(let i=0; i<props.ingra[aa];i++){\n          customfood+=<Burgeringra key={aa+i} type={aa}/>;\n      }\n      \n  } */\n\n  /*数组方法\n  let customfood=[];\n  const countingradience=Object.keys(props.ingra);\n   for (let j=0; j<countingradience.length; j++){\n      for(let i=0; i<props.ingra[countingradience[j]];i++){\n          customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n       }\n  }\n  console.log(customfood);\n  */\n\n  /* const toParent = (props) => {\n  // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n      props.parent.getChildrenMsg(this, this.state.msg)\n  }  */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Burgeringra, {\n    type: \"test1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), countingradience, emptyinfo, React.createElement(Burgeringra, {\n    type: \"test2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => this.setState({\n      count: this.state.count + 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Click me\"));\n  /* (ingra,index)=>{\n  ingra.map(\n   )\n  } */\n};\n\nexport default burger;","map":{"version":3,"sources":["/Users/alexzhang/Documents/react/react-b/src/component/burger/burger.js"],"names":["React","useState","Burgeringra","burger","props","count","setCount","emptyinfo","countingradience","Object","keys","ingra","map","aa","Array","bb","index","reduce","sec","concat","console","log","length","setState","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,MAAM,GAAEC,KAAD,IAAS;AAClB;AADkB,oBAEQH,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAEXI,KAFW;AAAA,QAEJC,QAFI;;AAGlB,MAAIC,SAAS,GAAC,IAAd;AACA,QAAMC,gBAAgB,GAACC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,KAAlB,EACtBC,GADsB,CAClBC,EAAE,IAEF,CAAC,GAAGC,KAAK,CAACV,KAAK,CAACO,KAAN,CAAYE,EAAZ,CAAD,CAAT,EACJD,GADI,CACA,CAACG,EAAD,EAAKC,KAAL,KAAa;AACV,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEH,EAAE,GAACG,KAAH,GAASD,EAA3B;AAA+B,MAAA,IAAI,EAAEF,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAHA,CAHkB;AASvB;AATuB,GAUtBI,MAVsB,CAUf,CAACJ,EAAD,EAAIK,GAAJ,KAAU;AACd,WAAOL,EAAE,CAACM,MAAH,CAAUD,GAAV,CAAP;AACH,GAZsB,CAAvB;AAaAE,EAAAA,OAAO,CAACC,GAAR,CAAYb,gBAAZ;;AACA,MAAGA,gBAAgB,CAACc,MAAjB,KAA0B,CAA7B,EAA+B;AAC3Bf,IAAAA,SAAS,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAV;AACH,GAFD,MAGI,CAGH,CAND,CAII;AACA;;AAEJ;;;;;;;AAOA;;;;;;;;;;;AAaA;;;;;;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQCC,gBARD,EASCD,SATD,EAWA,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBF,KAAhB,WAbA,EAcA;AAAQ,IAAA,OAAO,EAAE,MAAM,KAAKkB,QAAL,CAAc;AAAElB,MAAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWnB,KAAX,GAAmB;AAA5B,KAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdA,CADJ;AAoBA;;;;AAMH,CA7ED;;AA+EA,eAAeF,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport Burgeringra from './burgeringra/burgeringra';\n\nconst burger=(props)=>{\n    //const [check, setCheck]=useState(false);\n    const [count, setCount] = useState(0);\n    let emptyinfo=null;\n    const countingradience=Object.keys(props.ingra)\n    .map(aa=>\n        \n         [...Array(props.ingra[aa])]\n    .map((bb, index)=>{\n            return <Burgeringra key={aa+index+bb} type={aa}/>;\n        }\n    ) \n    )\n    /*把Array的三个数组合并*/\n    .reduce((aa,sec)=>{\n        return aa.concat(sec)\n    })\n    console.log(countingradience);\n    if(countingradience.length===0){\n        emptyinfo=<p>please input ingradient</p>\n    }\n    else{\n        //props.parent.getChildrenMsg(this, true);\n        //()=>setCheck(check=true);\n    }\n    /* {\n        for(let i=0; i<props.ingra[aa];i++){\n            customfood+=<Burgeringra key={aa+i} type={aa}/>;\n        }\n        \n    } */\n\n    /*数组方法\n    let customfood=[];\n    const countingradience=Object.keys(props.ingra);\n\n    for (let j=0; j<countingradience.length; j++){\n        for(let i=0; i<props.ingra[countingradience[j]];i++){\n            customfood.push(<Burgeringra key={countingradience[j]+i} type={countingradience[j]}/>);\n\n        }\n    }\n    console.log(customfood);\n    */\n    \n    /* const toParent = (props) => {\n    // console.log(this.props.parent.getChildrenMsg.bind(this, this.state.msg))\n        props.parent.getChildrenMsg(this, this.state.msg)\n    }  */\n    \n        \n    return (\n        <div>\n        <Burgeringra type='test1'/>\n        {/* <Burgeringra type={props.ingradience.custom1}/> \n        <Burgeringra type={props.ingradience.custom2}/> \n        <Burgeringra type={props.ingradience.custom3}/>  */}\n        {/* 数组方法component\n        {customfood} */}\n\n        {countingradience}\n        {emptyinfo}\n        \n        <Burgeringra type='test2'/>\n        {/* <button disabled={check}>Check Out</button> */}\n        <p>You clicked {count} times</p>\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\n    Click me\n  </button>\n        </div>\n    )\n    /* (ingra,index)=>{\n    ingra.map(\n\n    )\n} */\n    \n};\n\nexport default burger;"]},"metadata":{},"sourceType":"module"}